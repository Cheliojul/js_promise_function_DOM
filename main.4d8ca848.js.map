{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","notification","document","createElement","className","innerText","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,OAAAA,EAAQI,iBAAiBH,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EACCD,6BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GADpD,UAKN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,UAAY,UACzBH,EAAaI,UAAYL,EAEzBE,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACflB,QAAAA,EACAQ,aAAAA","file":"main.4d8ca848.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve =>\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName}\n       on the element: ${element.nodeName}, id: ${element.id}.`);\n    }));\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.className = 'message';\n  notification.innerText = message;\n\n  document.body.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}